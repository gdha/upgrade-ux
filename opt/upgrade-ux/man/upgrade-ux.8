.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "UPGRADE\-UX" "8" "August 2025" ""
.SH "NAME"
\fBupgrade\-ux\fR \- a framework to update or patch an Unix system (Linux, HP\-UX and Solaris)
.SH "SYNOPSIS"
\fBupgrade\-ux\fR [\fB\-dDsSpFvV\fR] [\fB\-c DIR\fR] \fICOMMAND\fR [\-\- \fIARGS\fR\|\.\|\.\|\.]
.SH "DESCRIPTION"
Upgrade\-ux is an Open Source upgrade framework to make patching and upgrades easy and repeatable\.
.P
Extending upgrade\-ux is made possible by its modular (ksh) framework\. Consistent logging and optionally extended output help understand the concepts behind Upgrade\-ux and help debug during development\.
.P
Upgrade\-ux comes with ABSOLUTELY NO WARRANTY; for details see the GNU General Public License at: https://www\.gnu\.org/licenses/gpl\.html
.SH "OPTIONS"
.SS "GLOBAL OPTIONS"
.TP
\fB\-c\fR \fIDIR\fR
alternative config directory; instead of \fB/etc/opt/upgrade\-ux\fR
.TP
\fB\-p\fR
\fIpreview mode\fR (we will not remove or install, update any software on this system) A preview will be forced by \fIupgrade\-ux\fR before we can start an upgrade for real!
.TP
\fB\-d\fR
\fIdebug mode\fR (log debug messages to log file)
.TP
\fB\-D\fR
\fIdebugscript mode\fR (log every function call)
.TP
\fB\-s\fR
\fIsimulation mode\fR (show what scripts rear would include)
.TP
\fB\-S\fR
\fIstep\-by\-step mode\fR (acknowledge each script individually)
.TP
\fB\-F\fR
\fIforced\fR continuation during preview or upgrade mode when check_patches returns errors
.TP
\fB\-v\fR
\fIverbose output\fR (show progress output)
.TP
\fB\-V\fR
version information
.SS "COMMANDS"
.TP
\fIdump\fR
dump configuration and system information; please run this to verify your setup
.TP
\fIhelp\fR
print full list of commands and options
.TP
\fIpurgelogs\fR
remove log files older then 30 days
.TP
\fImkdist\fR
creates a tar archive of upgrade\-ux
.TP
\fItest\fR
a simple test flow (stale NFS test)
.TP
\fIupgrade\fR
the default command (when no command given) which will launch the upgrade/update/patch procedure
.P
Use \fBupgrade\-ux \-v help\fR for more advanced commands\.
.SH "CONFIGURATION"
There are several configuration files available under (\fI/etc/opt/upgrade\-ux/\fR):
.TP
\fIdefault\.conf\fR
the default configuration file which defines parameters and variables\. You should not change anything in here\. If you need to modify a parameter then copy that line into the \fIlocal\.conf\fR file\.
.TP
\fIlocal\.conf\fR
the local configuration file meant for the end\-user\. Remember, configuration files should be treated as shell scripts\.
.TP
\fIHP\-UX\.conf\fR
parameters and settings only read by HP\-UX systems
.TP
\fISunOS\.conf\fR
parameters and settings only read by Solaris systems
.TP
\fIGNU/Linux\.conf\fR
parameters and settings only read by GNU/Linux systems
.TP
\fIexclude\.packages\fR
the file to add packages which need to be excluded from updating
.P
You have the choice to create additional configuration files if required\. Use the \fIupgrade\-ux dump\fR and check the \fIconfiguration tree\fR section to have a complete overview of all configuration files searched for (it is OK if these do not exist)\.
.P
A typical variable might be the \fBYEAR\fR setting to define from which year (instead of the default \fB$(date +%Y)\fR [current year]) we want to install the patch bundles\.
.SH "INI FILES"
Each Unix Operating System requires an \fIINI\fR file which contains the sections the upgrade procedure will follow in sequence\.
.P
The name of such \fIINI\fR file is build as follow:
.IP "" 4
.nf
/etc/opt/upgrade\-ux/$OS\-$OS_VERSION\-$YEAR\.ini
.fi
.IP "" 0
.P
The \fIINI\fR file is build out of sections (a section can be empty, except for the \fI[install]\fR INI section):
.TP
\fI[preremove]\fR
Add here any specific command to remove specific software bundles before starting the upgrade, e\.g\. if some software cannot be upgrade and should be re\-installed\. Example:
.IP
\fBcommand[0] = (command)\fR
.IP
\fBoptions[0] = (options for above command)\fR
.IP
\fBbundle[0] = (which software to remove)\fR
.IP
\fBversion[0] = (specific version of above software bundle to be removed)\fR
.IP
\fBcommand[1] = (command)\fR
.IP
\fB\|\.\|\.\|\.\fR
.TP
\fI[preinstall]\fR
Add here any specific command you want to run
.IP
\fBcommand[0] = (command)\fR
.IP
\fBoptions[0] = (options for above command)\fR
.TP
\fI[install]\fR
Add here all commands required to install, upgrade or patch our systems\. Use the syntax:
.IP
\fBcommand[0] = (command)\fR
.IP
\fBoptions[0] = (options for above command)\fR
.IP
\fBsource[0] = (location of the software depot)\fR
.IP
\fBbundle[0] = (which software to install, update)\fR
.IP
\fBversion[0] = (specific version of above software bundle to be installed or updated)\fR
.TP
\fI[postinstall]\fR
Add here all commands required to install additional software packages\. Use the same syntax as for [install]
.TP
\fI[postremove]\fR
Add here commands to remove something that could not be prevented by [install]\. Syntax is the same as with [preremove]
.TP
\fI[configure]\fR
Add here commands to configure something special such as cron entries\. Use same syntax as [preinstall]
.TP
\fI[cleanup]\fR
Add here commands to cleanup, if required\. Most likely it will be empty
.TP
\fI[postexecute]\fR
Add here commands to run some special, such as \fIcfg2html\fR (as an example)
.IP
\fBcommand[0] = "/opt/cfg2html/bin/cfg2html"\fR
.IP
\fBoptions[0] = "\-2%Y%m%d"\fR
.SH "EXIT STATUS"
.TP
\fB0\fR
Successful program execution\.
.TP
\fB>0\fR
Usage, syntax or execution errors\. Check the log file in \fB/var/opt/upgrade\-ux/log/\fR for more information\.
.SH "FILES"
.TP
/opt/upgrade\-ux/bin/upgrade\-ux
The program itself\.
.TP
/etc/opt/upgrade\-ux/default\.conf
The default configuration file\.
.TP
/etc/opt/upgrade\-ux/local\.conf
System specific configuration can be set here\.
.TP
/etc/opt/upgrade\-ux/exclude\.packages
File contains packages to exclude from updating (one per line)\.
.TP
/var/opt/upgrade\-ux/
Directory which contains all timestamped directories and log directory\.
.TP
/var/opt/upgrade\-ux/status
File containing time stamps when all sections were executed (as upgrade\-ux may be restarted after a reboot and will continue where it was interrupted)\.
.P
For example:
.IP "" 4
.nf
2014\-05\-27 09:35:00 postexecute:ended
2014\-05\-27 09:35:00 preview:ended   (preview ended successfully)
.fi
.IP "" 0
.TP
/var/opt/upgrade\-ux/\fIYYYY\-MM\-DD\fR/
Evidence files collected during \fIprep\fR phase (the \fIbefore\fR files) and \fIpostinstall\fR phase (the \fIafter\fR files) are stored under this directory\.
.TP
/var/opt/upgrade\-ux/log/
Directory containing all log files of each upgrade\-ux run with timestamps
.TP
/tmp/upgrade\-ux\.xxx
Upgrade\-ux working directory\. By default it is removed after each run\. If upgrade\-ux exits with an error you probably need to remove this directory ny hand\. In debugging mode the directory will not be removed as aid in helping to debug this software\.
.TP
/opt/upgrade\-ux/scripts
Each section will have its own directory (with the name of a section) under this directory\. Under each section directory you will find sub\-directories with $OS_VENDOR name\. Finally, under the $OS_VENDOR directories you will find scripts (without the she\-bang!) that will be executed according the flow of the script\. To honor the sequence use a prefix number\.
.P
To see all scripts to be executed use the simulate option:
.IP "" 4
.nf
# /opt/upgrade\-ux/bin/upgrade\-ux \-s
upgrade\-ux 0\.1 / Git
Using log file: /var/opt/upgrade\-ux/log/upgrade\-ux\-20140506\-1037\-hostname\.log
Source init/default/03_prepare_tmp_build_area\.sh
Source init/default/05_select_ini_file\.sh
Source init/default/10_check_current_status\.sh
.fi
.IP "" 0
.P
To run \fBupgrade\-ux\fR in \fIpreview\fR mode use the \fB\-p\fR flag:
.IP "" 4
.nf
# /opt/upgrade\-ux/bin/upgrade\-ux \-vp
.fi
.IP "" 0
.P
To run \fBupgrade\-ux\fR in \fIupgrade\fR mode then do \fInot\fR use the \fB\-p\fR flag:
.IP "" 4
.nf
# /opt/upgrade\-ux/bin/upgrade\-ux \-v
.fi
.IP "" 0
.SH "BUGS"
Feedback is welcome, please report any issues or improvements to our issue\-tracker at: https://github\.com/gdha/upgrade\-ux/issues Furthermore, we welcome pull requests via GitHub\.
.P
Be aware, that upgrade\-ux is only fully developed on RHEL based Linux systems and HP\-UX systems\. For other GNU/Linux variants please create an issue with your wishlist\. However, new development will only be carried out via sponsoring!
.SH "COPYRIGHT"
(c) 2014 \- 2025
.P
Gratien Dhaese
.P
Upgrade\-ux comes with ABSOLUTELY NO WARRANTY; for details see the GNU General Public License at https://www\.gnu\.org/licenses/gpl\.html
