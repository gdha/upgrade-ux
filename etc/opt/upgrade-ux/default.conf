#
# default configuration. Everything used should be set to a sane default here
#
#    upgrade-ux is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License version 3.

#    upgrade-ux is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with upgrade-ux; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

# PLEASE NOTE:
#
# * Here we define and describe ALL configuration variables and set them to a sane
#   default. Please do NOT change them here, but rather copy them to site.conf or
#   local.conf
# * Most variables can be set to an empty value (VAR=) which means that this
#   setting is off or set to some automatic mode.
# * Boolean variables can be set to anything as we only check whether the variable
#   is not empty.
# * Some variables are actually ksh arrays and should be treated with care.
#   To set an empty array, use set -A VAR.

# These variables are used to include arch/os/version specific stuff

# ------------------------------------------------------------------------------
# Parameters -------------------------------------------------------------------
# ------------------------------------------------------------------------------

PID=$$
export PID
platform=$(uname -s)         # Operating System name, e.g. Linux, HP-UX, SunOS
lhost=$(uname -n)            # Local host name
osVer=$(uname -r)            # OS Release
osVer=$(echo ${osVer#B.})    # B.11.11 becomes 11.11

# Short hostname (define HOSTNAME as first as we need it LOGFILE variable)
HOSTNAME="$(hostname 2>/dev/null || uname -n | cut -d. -f1)"

# we gonna remove the .sh extension from the following filenames
ERRfile=$LOG_DIR/${PROGRAM%.*}-${PID}-ERRfile.txt  # contains the exit code (not sure we keep this??)
LOGFILE=$LOG_DIR/${PROGRAM%.*}-$(date '+%Y%m%d-%H%M')-${HOSTNAME%%.*}.log
LOCKDIR=/tmp/${PROGRAM%.*}-LOCKDIR
PIDFILE=${LOCKDIR}/${PROGRAM%.*}-PIDFILE

# machine architecture, OS independent
REAL_MACHINE="$(uname -m)"
case "$REAL_MACHINE" in
    (x86_64|i686|i586)
        # all these behave exactly like i386. For 64bit we took care to handle the
        # special cases within the 32bit scripts to prevent code duplication
        MACHINE=i386
        ;;
    (*)
        MACHINE=$REAL_MACHINE
        ;;
esac

# Architecture, e.g. Linux-i386
ARCH="$(uname -s)-$MACHINE" 2>>/dev/null
REAL_ARCH="$(uname -s)-$REAL_MACHINE" 2>>/dev/null


# Operating System, e.g. GNU/Linux
OS="$(uname -o 2>/dev/null || uname -s)"
# vendors are SuSE Linux, Red Hat, Debian, Ubuntu, etc. as returned by lsb_release -i -s
OS_VENDOR=generic
# versions are 9.0 10 6.06, as returned by lsb_release -r -s
OS_VERSION=none

# no default workflows. This variable is filled in where the worklflows are defined
set -A WORKFLOWS

# do we run this script in the background or not - BATCH_MODE=1 for background; empty means interactive
[ $(tty -s; echo $?) ] && BATCH_MODE= || BATCH_MODE=1

# DS stands for Date Stamp (2014-03-21) - will be used to store evidence files under $VAR_DIR/$DS/
DS="$( date '+%Y-%m-%d' )"

# the preview file indicates if we already ran upgrade-ux in preview mode (meaning no real updates will happen,
# just investigating and reporting issues which need to be fixed before we do the real stuff)
PREVIEW_FILE="$VAR_DIR/$DS/preview_mode_ran"

# current status is by default empty (the first time we defined it or we read it from
# the STATUS_FILE
CURRENT_STATUS=""

# the status file will be used to track the current state of stage and historic timestamps
# we have 2 functions (ReadCurrentStatus and SetCurrentStatus that update this file
# and also the variable CURRENT_STATUS)
STATUS_FILE="$VAR_DIR/status"

# a variable that can block going to the next stage, if it is set to "N" then we will being kicked out
EnterNextStageAllowed=

# how many days may a system be up before a reboot is required before we run upgrade-ux (not used by preview mode)
DAYSUPTIME=30

# The default year to use with our patch bundle is *current year* [ $(date '+%Y') ] - to overrule define it manually
# in the local.conf file. E.g. when running upgrade-ux in 2015 but still installing patches from 2014 then define: YEAR=2014
YEAR=$(date '+%Y')

# The REQUIRED_PROGS variable list the executables which we need at minimum to run upgrade-ux with success
# We define an array here which is common for all UNIXes and in each OS dependent configuration file we will
# extend this array.
# To extend the array use: set -A REQUIRED_PROGS ${REQUIRED_PROGS[@]} "executable"
set -A REQUIRED_PROGS "awk" "wc" "sed" "head" "uname" "tr" "cut" "date" "logger" "shutdown"
